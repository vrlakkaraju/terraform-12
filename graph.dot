digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] aws_instance.dev" [label = "aws_instance.dev", shape = "box"]
		"[root] aws_security_group.sg1" [label = "aws_security_group.sg1", shape = "box"]
		"[root] data.aws_ami.ubuntu" [label = "data.aws_ami.ubuntu", shape = "box"]
		"[root] local.tags" [label = "local.tags", shape = "note"]
		"[root] provider.aws" [label = "provider.aws", shape = "diamond"]
		"[root] var.default" [label = "var.default", shape = "note"]
		"[root] var.isdev" [label = "var.isdev", shape = "note"]
		"[root] var.name" [label = "var.name", shape = "note"]
		"[root] var.sg_ports" [label = "var.sg_ports", shape = "note"]
		"[root] var.type" [label = "var.type", shape = "note"]
		"[root] aws_instance.dev" -> "[root] data.aws_ami.ubuntu"
		"[root] aws_instance.dev" -> "[root] local.tags"
		"[root] aws_instance.dev" -> "[root] var.type"
		"[root] aws_security_group.sg1" -> "[root] provider.aws"
		"[root] aws_security_group.sg1" -> "[root] var.sg_ports"
		"[root] data.aws_ami.ubuntu" -> "[root] provider.aws"
		"[root] local.tags" -> "[root] var.default"
		"[root] local.tags" -> "[root] var.name"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_instance.dev"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_security_group.sg1"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] var.isdev"
		"[root] provider.aws (close)" -> "[root] aws_instance.dev"
		"[root] provider.aws (close)" -> "[root] aws_security_group.sg1"
		"[root] root" -> "[root] meta.count-boundary (EachMode fixup)"
		"[root] root" -> "[root] provider.aws (close)"
	}
}

